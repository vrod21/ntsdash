// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NTDataHiveGrpcService.DAL.Data;

#nullable disable

namespace NTDataHiveGrpcService.Migrations
{
    [DbContext(typeof(NTDataHiveContext))]
    partial class NTDataHiveContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("NTDataHiveGrpcService.DAL.Model.Credit", b =>
                {
                    b.Property<int>("CreditIdExt")
                        .HasColumnType("int");

                    b.Property<string>("ArticleId")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CopyEditedBy")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CopyEditingLevel")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Department")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("EmployeeName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("JournalId")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("PublisherName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("QualityAssurance")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("SupplierName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WebId")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("CreditIdExt");

                    b.ToTable("Credit");
                });

            modelBuilder.Entity("NTDataHiveGrpcService.DAL.Model.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Create_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PublisherIdentity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ScoreCard")
                        .HasColumnType("int");

                    b.Property<string>("WebId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("NTDataHiveGrpcService.DAL.Model.Error", b =>
                {
                    b.Property<int>("ErrorIdExt")
                        .HasColumnType("int");

                    b.Property<string>("DescriptionOfError")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ErrorCategory")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ErrorCode")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<double>("ErrorCount")
                        .HasColumnType("float");

                    b.Property<string>("ErrorLocation")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ErrorSubtype")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ErrorType")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("IntroducedOrMissed")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Matter")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("ErrorIdExt");

                    b.ToTable("Error");
                });

            modelBuilder.Entity("NTDataHiveGrpcService.DAL.Model.Feedback", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CorrectiveAction")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<int?>("MegaFeedback")
                        .HasColumnType("int");

                    b.Property<string>("NatureOfCA")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("NatureOfPM")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("OwnerOfCA")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("OwnerOfPM")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<double>("PageCount")
                        .HasColumnType("float");

                    b.Property<string>("PreventiveMeasure")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("RootCause")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("StatusOfCA")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("StatusOfPM")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("TargetDateOfCompletionCA")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("TargetDateOfCompletionPM")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("MegaFeedback");

                    b.ToTable("Feedback");
                });

            modelBuilder.Entity("NTDataHiveGrpcService.DAL.Model.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<string>("CompanyId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WebId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Person");
                });

            modelBuilder.Entity("NTDataHiveGrpcService.DAL.Model.PersonTypes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PersonType");
                });

            modelBuilder.Entity("NTDataHiveGrpcService.DAL.Model.Position", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Position");
                });

            modelBuilder.Entity("NTDataHiveGrpcService.DAL.Model.PreEditing", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ArticleId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CopyEditedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CopyEditingLevel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CorrectiveAction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Department")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescriptionOfError")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ErrorCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ErrorCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ErrorCount")
                        .HasColumnType("int");

                    b.Property<string>("ErrorLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ErrorSubtype")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ErrorType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IntroducedOrMissed")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JournalId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Matter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NatureOfCA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NatureOfPM")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OwnerOfCA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OwnerOfPM")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PageCount")
                        .HasColumnType("int");

                    b.Property<string>("PreventiveMeasure")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PublisherName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QualityAssurance")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RootCause")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusOfCA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusOfPM")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupplierName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TargetDateOfCompletionCA")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("TargetDateOfCompletionPM")
                        .HasColumnType("datetime2");

                    b.Property<string>("WebId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PreEditing");
                });

            modelBuilder.Entity("NTDataHiveGrpcService.DAL.Model.Publisher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("PublisherName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Publisher");
                });

            modelBuilder.Entity("NTDataHiveGrpcService.DAL.Model.Revision", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ArticleId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CopyEditingLevel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Department")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescriptionOfError")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ErrorCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ErrorCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ErrorCount")
                        .HasColumnType("float");

                    b.Property<string>("ErrorLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ErrorSubtype")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ErrorType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IntroducedOrMissed")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JournalId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Matter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("PageCount")
                        .HasColumnType("float");

                    b.Property<string>("PublisherName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QualityAssurance")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupplierName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WebId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Revision");
                });

            modelBuilder.Entity("NTDataHiveGrpcService.DAL.Model.Credit", b =>
                {
                    b.HasOne("NTDataHiveGrpcService.DAL.Model.Feedback", "FeedbackCreditNavigation")
                        .WithOne("Credit")
                        .HasForeignKey("NTDataHiveGrpcService.DAL.Model.Credit", "CreditIdExt")
                        .IsRequired()
                        .HasConstraintName("FK_Credit_Feedback");

                    b.Navigation("FeedbackCreditNavigation");
                });

            modelBuilder.Entity("NTDataHiveGrpcService.DAL.Model.Error", b =>
                {
                    b.HasOne("NTDataHiveGrpcService.DAL.Model.Feedback", "FeedbackErrorNavigation")
                        .WithOne("Error")
                        .HasForeignKey("NTDataHiveGrpcService.DAL.Model.Error", "ErrorIdExt")
                        .IsRequired()
                        .HasConstraintName("FK_Error_Feedback");

                    b.Navigation("FeedbackErrorNavigation");
                });

            modelBuilder.Entity("NTDataHiveGrpcService.DAL.Model.Feedback", b =>
                {
                    b.HasOne("NTDataHiveGrpcService.DAL.Model.Feedback", "MegaFeedbackNavigation")
                        .WithMany("InverseMegaFeedbackNavigation")
                        .HasForeignKey("MegaFeedback")
                        .HasConstraintName("FK_Address_Address");

                    b.Navigation("MegaFeedbackNavigation");
                });

            modelBuilder.Entity("NTDataHiveGrpcService.DAL.Model.Feedback", b =>
                {
                    b.Navigation("Credit");

                    b.Navigation("Error");

                    b.Navigation("InverseMegaFeedbackNavigation");
                });
#pragma warning restore 612, 618
        }
    }
}
