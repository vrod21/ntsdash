@using Microsoft.AspNetCore.Authorization

@attribute [Authorize]
@implements IDisposable

<div class="rz-shadow-5 rz-p-3 rz-border-radius-3">
    <div Class="rz-p-0 rz-p-md-5">
        <h4>Set To Local Time</h4>
        <RadzenRadialGauge Style="color:white;">
            <RadzenRadialGaugeScale Step="1" Min="0" Max="12" StartAngle="0" EndAngle="360" ShowFirstTick="false"
                MinorStep=@minorStep
                TickLength="20"
                MinorTickLength="10"
                TickLabelOffset="40"
                TickPosition="GaugeTickPosition.Inside">
                <RadzenRadialGaugeScalePointer Value=@hours Length="0.6" ShowValue="false" />
                <RadzenRadialGaugeScalePointer Value=@seconds Length="0.9" Fill="red" Width="2" ShowValue="false" />
                <RadzenRadialGaugeScalePointer Value=@minutes Length="0.8" ShowValue="false" />
            </RadzenRadialGaugeScale>
        </RadzenRadialGauge>
    </div>
</div>

@code {
    private Timer timer;
    private double hours;
    private double minutes;
    private double seconds;

    double minorStep = 12 / 60.0;

    protected override void OnInitialized()
    {
        timer = new Timer(state =>
        {
            var now = DateTime.Now;

            hours = now.Hour % 12 + now.Minute / 60.0;

            minutes = now.Minute * minorStep + now.Second * 12 / 3600.0;
            seconds = now.Second * minorStep;

            InvokeAsync(StateHasChanged);
        }, null, 0, 1000);
    }

    public void Dispose()
    {
        timer?.Dispose();
    }

}
